path circle(r,n)
  jump r

  store 360/n in beta
  store 2*@pi*r/n in a

  turn left 90+beta/2
  counter x from 0 to n do
    walk a
    turn left beta
  done
endpath

begin
  store @max_y * 0.9 in radius
  if @1 > 0 then
    store @1 in radius
  endif
  store 100 in steps
  if @2 > 0 then
    store @2 in steps
  endif

  store 1 in @delay

  path circle(radius,steps)
  jump home
  stop
end